{"ast":null,"code":"var _jsxFileName = \"E:\\\\Project 2022\\\\src\\\\CryptoContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { CoinList } from \"./config/api\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, db } from \"./firebase\";\nimport { onSnapshot, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\n\nconst CryptoContext = ({\n  children\n}) => {\n  _s();\n\n  const [currency, setCurrency] = useState(\"INR\");\n  const [symbol, setSymbol] = useState(\"₹\");\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [user, setuser] = useState(null);\n  const [alert, setAlert] = useState({\n    open: false,\n    message: \"\",\n    type: \"success\"\n  });\n  const [watchlist, setWatchlist] = useState([]);\n  useEffect(() => {\n    if (user) {\n      const coinRef = doc(db, \"watchlist\", user === null || user === void 0 ? void 0 : user.uid);\n      var unsubscribe = onSnapshot(coinRef, coin => {\n        if (coin.exists()) {\n          console.log(coin.data().coins);\n          setWatchlist(coin.data().coins);\n        } else {\n          console.log(\"No Items in Watchlist\");\n        }\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [user]);\n  useEffect(() => {\n    onAuthStateChanged(auth, user => {\n      if (user) setuser(user);else setuser(null);\n    });\n  }, []);\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    console.log(data);\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    if (currency === \"INR\") setSymbol(\"₹\");else if (currency === \"USD\") setSymbol(\"$\");else if (currency === \"EUR\") setSymbol(\"€\");else if (currency === \"CAD\") setSymbol(\"$\");\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    value: {\n      currency,\n      setCurrency,\n      symbol,\n      coins,\n      loading,\n      fetchCoins,\n      alert,\n      setAlert,\n      user,\n      watchlist\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoContext, \"OSp8wX5PYRQWuvbKocCTsQYqPf0=\");\n\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n\n  return useContext(Crypto);\n};\n\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\n_c2 = CryptoState;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"sources":["E:/Project 2022/src/CryptoContext.js"],"names":["React","createContext","useContext","useEffect","useState","axios","CoinList","onAuthStateChanged","auth","db","onSnapshot","doc","Crypto","CryptoContext","children","currency","setCurrency","symbol","setSymbol","coins","setCoins","loading","setLoading","user","setuser","alert","setAlert","open","message","type","watchlist","setWatchlist","coinRef","uid","unsubscribe","coin","exists","console","log","data","fetchCoins","get","CryptoState"],"mappings":"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","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CoinList } from \"./config/api\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth, db } from \"./firebase\";\r\nimport { onSnapshot, doc } from \"firebase/firestore\";\r\n\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n  const [currency, setCurrency] = useState(\"INR\");\r\n  const [symbol, setSymbol] = useState(\"₹\");\r\n  const [coins, setCoins] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [user, setuser] = useState(null);\r\n  const [alert, setAlert] = useState({\r\n    open: false,\r\n    message: \"\",\r\n    type: \"success\",\r\n  });\r\n  \r\nconst [watchlist, setWatchlist] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const coinRef = doc(db, \"watchlist\", user?.uid);\r\n      var unsubscribe = onSnapshot(coinRef, (coin) => {\r\n        if (coin.exists()) {\r\n          console.log(coin.data().coins);\r\n          setWatchlist(coin.data().coins);\r\n        } else {\r\n          console.log(\"No Items in Watchlist\");\r\n        }\r\n      });\r\n    }\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n    }, [user]);\r\n  useEffect(() => {\r\n   onAuthStateChanged(auth, user => {\r\nif(user)setuser(user);\r\nelse setuser(null);\r\n   })\r\n  }, [])\r\n\r\n  const fetchCoins = async () => {\r\n    setLoading(true);\r\n    const { data } = await axios.get(CoinList(currency));\r\n    console.log(data);\r\n\r\n    setCoins(data);\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currency === \"INR\") setSymbol(\"₹\");\r\n    else if (currency === \"USD\") setSymbol(\"$\");\r\n    else if (currency === \"EUR\") setSymbol(\"€\");\r\n    else if (currency === \"CAD\") setSymbol(\"$\");\r\n  }, [currency]);\r\n\r\n  return (\r\n    <Crypto.Provider value={{ currency, setCurrency, symbol , coins , loading ,fetchCoins ,alert , setAlert ,user , watchlist, }}>\r\n      {children}\r\n    </Crypto.Provider>\r\n  );\r\n};\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n  return useContext(Crypto);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}